// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apiTurnos.Data;

namespace apiTurnos.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200131235011_JornadaServicios")]
    partial class JornadaServicios
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("apiTurnos.Models.Empresa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Razon_social")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("apiTurnos.Models.Jornada", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("apertura")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("cierre")
                        .HasColumnType("datetime2");

                    b.Property<int?>("empresaid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("empresaid");

                    b.ToTable("Jornada");
                });

            modelBuilder.Entity("apiTurnos.Models.JornadasServicios", b =>
                {
                    b.Property<int>("jornadaId")
                        .HasColumnType("int");

                    b.Property<int>("servicioId")
                        .HasColumnType("int");

                    b.HasKey("jornadaId", "servicioId");

                    b.HasIndex("servicioId");

                    b.ToTable("jornadasServicios");
                });

            modelBuilder.Entity("apiTurnos.Models.Precio", b =>
                {
                    b.Property<DateTime>("fechahora")
                        .HasColumnType("datetime2");

                    b.Property<float>("importe")
                        .HasColumnType("real");

                    b.Property<int?>("servicioIdid")
                        .HasColumnType("int");

                    b.HasKey("fechahora");

                    b.HasIndex("servicioIdid");

                    b.ToTable("precios");
                });

            modelBuilder.Entity("apiTurnos.Models.Servicio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("servicios");
                });

            modelBuilder.Entity("apiTurnos.Models.Jornada", b =>
                {
                    b.HasOne("apiTurnos.Models.Empresa", "empresa")
                        .WithMany("jornadas")
                        .HasForeignKey("empresaid");
                });

            modelBuilder.Entity("apiTurnos.Models.JornadasServicios", b =>
                {
                    b.HasOne("apiTurnos.Models.Jornada", "jornada")
                        .WithMany()
                        .HasForeignKey("jornadaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apiTurnos.Models.Servicio", "servicio")
                        .WithMany()
                        .HasForeignKey("servicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("apiTurnos.Models.Precio", b =>
                {
                    b.HasOne("apiTurnos.Models.Servicio", "servicioId")
                        .WithMany("Precios")
                        .HasForeignKey("servicioIdid");
                });
#pragma warning restore 612, 618
        }
    }
}
